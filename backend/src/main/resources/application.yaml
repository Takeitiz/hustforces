spring:
  application:
    name: hustforces

  # Database connection (PostgreSQL)
  datasource:
    url: jdbc:postgresql://localhost:5432/judge0
    username: ${DB_USERNAME:judge0}
    password: ${DB_PASSWORD:YourPasswordHere1234}
    driver-class-name: org.postgresql.Driver

  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        # Add batch size for better performance with large updates
        jdbc:
          batch_size: 50

  # Redis configuration (for leaderboard)
  data:
    redis:
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:YourPasswordHere1234}
      username: default
      timeout: 5000
      host: localhost
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: -1ms

  # RabbitMQ configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}

  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 86400000
      cache-null-values: false
    cache-names: problems, allProblems, problemPages

  # Task execution config for async tasks
  task:
    execution:
      pool:
        core-size: 4
        max-size: 10
        queue-capacity: 100
        keep-alive: 60s

    # Scheduling config for background tasks
    scheduling:
      pool:
        size: 5
      thread-name-prefix: hustforces-scheduler-

  # Allow overriding bean definitions (needed for some configurations)
  main:
    allow-bean-definition-overriding: true

# Mount path for problems
mount:
  path: ${MOUNT_PATH:${user.dir}/problems}

# Judge0 API configuration
judge0:
  uri: ${JUDGE0_URI:http://localhost:2358}

# Server configuration
server:
  port: 8080
  base-url: ${SERVER_BASE_URL:https://8f47-2001-ee0-40c1-8307-b480-e98f-830b-987f.ngrok-free.app}

# Logging configuration
logging:
  pattern:
    console: ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}
  level:
    root: INFO
    com.hust.hustforces: DEBUG
    org.springframework: INFO
    org.hibernate: INFO
    com.hust.hustforces.service.impl.ProblemServiceImpl: DEBUG
    com.hust.hustforces.service.impl.ProblemCacheService: DEBUG
    com.hust.hustforces.utils.ProblemFileUtil: DEBUG
    # Add logging for scheduling and async operations
    org.springframework.scheduling: INFO

# JWT configuration
jwt:
  secret: ${JWT_SECRET:yourSecretKeyHereShouldBeAtLeast32CharactersLong}
  expiration: 86400000  # 24 hours in milliseconds

# Problem configuration
problem:
  preloading:
    enabled: true

# Thread pool configuration for other executor services
executor:
  core-pool-size: 5
  max-pool-size: 10
  queue-capacity: 25
  thread-name-prefix: hustforces-async-

# CodeRoom configuration
coderoom:
  # Maximum number of participants per room
  max-participants-default: 4
  max-participants-limit: 10

  # Room timeout settings
  inactive-timeout-minutes: 30
  abandoned-timeout-hours: 2

  # Redis key expiry for room data
  room-expiry-hours: 24

  # WebRTC configuration
  stun:
    server: stun:stun.l.google.com:19302

  # TURN server configuration (optional, for better connectivity)
  turn:
    server: ${TURN_SERVER:}
    username: ${TURN_USERNAME:}
    credential: ${TURN_CREDENTIAL:}

  # Code synchronization settings
  sync:
    max-history-size: 1000
    compression-enabled: true

  # Session recording (optional)
  recording:
    enabled: false
    storage-path: ${RECORDING_PATH:/var/hustforces/recordings}

# WebSocket configuration
websocket:
  # Message size limits
  message-size-limit: 65536  # 64KB
  send-buffer-size-limit: 524288  # 512KB

  # Timeout settings
  send-timeout: 20000  # 20 seconds

  # Thread pool settings
  client-inbound-thread-pool:
    core-size: 8
    max-size: 16
    queue-capacity: 100

  client-outbound-thread-pool:
    core-size: 8
    max-size: 16
    queue-capacity: 100

